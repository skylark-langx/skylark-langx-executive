{"version":3,"sources":["timer.js"],"names":["define","Timer","callback","time","this","running","id","prototype","start","self","loop","setTimeout","stop","clearTimeout"],"mappings":";;;;;;;AAAAA,UACE,WACD,aAWA,SAASC,EAAMC,EAAUC,GAExBC,KAAKF,SAAWA,EAChBE,KAAKD,KAAOA,EAEZC,KAAKC,SAAU,EACfD,KAAKE,IAAM,EA4CZ,OAlCAL,EAAMM,UAAUC,MAAQ,WAEvB,IAAGJ,KAAKC,QAAR,CAKAD,KAAKC,SAAU,EAEf,IAAII,EAAOL,MACX,SAASM,IAERD,EAAKP,WAEFO,EAAKJ,UAEPI,EAAKH,GAAKK,WAAWD,EAAMD,EAAKN,OAIlCO,KAQDT,EAAMM,UAAUK,KAAO,WAEtBR,KAAKC,SAAU,EACfQ,aAAaJ,KAAKH,KAGZL","file":"../timer.js","sourcesContent":["define([\n],function(){\n\t\"use strict\";\n\n\t/**\n\t * Time is user to call functions in loop at a defined rate.\n\t * \n\t * Loop time can be changed dinamically.\n\t *\n\t * @class Timer\n\t * @param {Function} callback Timer callback function.\n\t * @param {Number} time Timer period.\n\t */\n\tfunction Timer(callback, time)\n\t{\n\t\tthis.callback = callback;\n\t\tthis.time = time;\n\n\t\tthis.running = false;\n\t\tthis.id = -1;\n\t}\n\n\t/**\n\t * Start timer, is the timer is already running dosen't do anything.\n\t *\n\t * The callback is called right after starting the timer.\n\t * \n\t * @method start\n\t */\n\tTimer.prototype.start = function()\n\t{\n\t\tif(this.running)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tvar self = this;\n\t\tfunction loop()\n\t\t{\n\t\t\tself.callback();\n\n\t\t\tif(self.running)\n\t\t\t{\n\t\t\t\tself.id = setTimeout(loop, self.time);\n\t\t\t}\n\t\t}\n\n\t\tloop();\n\t};\n\n\t/**\n\t * Stop timer.\n\t * \n\t * @method stop\n\t */\n\tTimer.prototype.stop = function()\n\t{\n\t\tthis.running = false;\n\t\tclearTimeout(self.id);\n\t};\n\n\treturn Timer;\n});"]}