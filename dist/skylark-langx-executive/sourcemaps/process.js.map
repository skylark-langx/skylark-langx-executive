{"version":3,"sources":["process.js"],"names":["define","executive","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimeout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"../process.js","sourcesContent":["define([\r\n    \"./executive\"\r\n],function(executive){\r\n    // shim for using process in browser\r\n    var process = {};\r\n\r\n    // cached from whatever global is present so that test runners that stub it\r\n    // don't break things.  But we need to wrap it in a try catch in case it is\r\n    // wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n    // function because try/catches deoptimize in certain engines.\r\n\r\n    var cachedSetTimeout;\r\n    var cachedClearTimeout;\r\n\r\n    function defaultSetTimeout() {\r\n        throw new Error('setTimeout has not been defined');\r\n    }\r\n\r\n    function defaultClearTimeout () {\r\n        throw new Error('clearTimeout has not been defined');\r\n    }\r\n\r\n    (function () {\r\n        try {\r\n            if (typeof setTimeout === 'function') {\r\n                cachedSetTimeout = setTimeout;\r\n            } else {\r\n                cachedSetTimeout = defaultSetTimeout;\r\n            }\r\n        } catch (e) {\r\n            cachedSetTimeout = defaultSetTimeout;\r\n        }\r\n        try {\r\n            if (typeof clearTimeout === 'function') {\r\n                cachedClearTimeout = clearTimeout;\r\n            } else {\r\n                cachedClearTimeout = defaultClearTimeout;\r\n            }\r\n        } catch (e) {\r\n            cachedClearTimeout = defaultClearTimeout;\r\n        }\r\n    } ())\r\n\r\n    function runTimeout(fun) {\r\n        if (cachedSetTimeout === setTimeout) {\r\n            //normal enviroments in sane situations\r\n            return setTimeout(fun, 0);\r\n        }\r\n        // if setTimeout wasn't available but was latter defined\r\n        if ((cachedSetTimeout === defaultSetTimeout || !cachedSetTimeout) && setTimeout) {\r\n            cachedSetTimeout = setTimeout;\r\n            return setTimeout(fun, 0);\r\n        }\r\n        try {\r\n            // when when somebody has screwed with setTimeout but no I.E. maddness\r\n            return cachedSetTimeout(fun, 0);\r\n        } catch(e){\r\n            try {\r\n                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n                return cachedSetTimeout.call(null, fun, 0);\r\n            } catch(e){\r\n                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n                return cachedSetTimeout.call(this, fun, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    function runClearTimeout(marker) {\r\n        if (cachedClearTimeout === clearTimeout) {\r\n            //normal enviroments in sane situations\r\n            return clearTimeout(marker);\r\n        }\r\n        // if clearTimeout wasn't available but was latter defined\r\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\r\n            cachedClearTimeout = clearTimeout;\r\n            return clearTimeout(marker);\r\n        }\r\n        try {\r\n            // when when somebody has screwed with setTimeout but no I.E. maddness\r\n            return cachedClearTimeout(marker);\r\n        } catch (e){\r\n            try {\r\n                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n                return cachedClearTimeout.call(null, marker);\r\n            } catch (e){\r\n                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n                // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n                return cachedClearTimeout.call(this, marker);\r\n            }\r\n        }\r\n    }\r\n    \r\n    var queue = [];\r\n    var draining = false;\r\n    var currentQueue;\r\n    var queueIndex = -1;\r\n\r\n    function cleanUpNextTick() {\r\n        if (!draining || !currentQueue) {\r\n            return;\r\n        }\r\n        draining = false;\r\n        if (currentQueue.length) {\r\n            queue = currentQueue.concat(queue);\r\n        } else {\r\n            queueIndex = -1;\r\n        }\r\n        if (queue.length) {\r\n            drainQueue();\r\n        }\r\n    }\r\n\r\n    function drainQueue() {\r\n        if (draining) {\r\n            return;\r\n        }\r\n        var timeout = runTimeout(cleanUpNextTick);\r\n        draining = true;\r\n\r\n        var len = queue.length;\r\n        while(len) {\r\n            currentQueue = queue;\r\n            queue = [];\r\n            while (++queueIndex < len) {\r\n                if (currentQueue) {\r\n                    currentQueue[queueIndex].run();\r\n                }\r\n            }\r\n            queueIndex = -1;\r\n            len = queue.length;\r\n        }\r\n        currentQueue = null;\r\n        draining = false;\r\n        runClearTimeout(timeout);\r\n    }\r\n\r\n    process.nextTick = function (fun) {\r\n        var args = new Array(arguments.length - 1);\r\n        if (arguments.length > 1) {\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                args[i - 1] = arguments[i];\r\n            }\r\n        }\r\n        queue.push(new Item(fun, args));\r\n        if (queue.length === 1 && !draining) {\r\n            runTimeout(drainQueue);\r\n        }\r\n    };\r\n\r\n    // v8 likes predictible objects\r\n    function Item(fun, array) {\r\n        this.fun = fun;\r\n        this.array = array;\r\n    }\r\n    Item.prototype.run = function () {\r\n        this.fun.apply(null, this.array);\r\n    };\r\n    process.title = 'browser';\r\n    process.browser = true;\r\n    process.env = {};\r\n    process.argv = [];\r\n    process.version = ''; // empty string to avoid regexp issues\r\n    process.versions = {};\r\n\r\n    function noop() {}\r\n\r\n    process.on = noop;\r\n    process.addListener = noop;\r\n    process.once = noop;\r\n    process.off = noop;\r\n    process.removeListener = noop;\r\n    process.removeAllListeners = noop;\r\n    process.emit = noop;\r\n    process.prependListener = noop;\r\n    process.prependOnceListener = noop;\r\n\r\n    process.listeners = function (name) { return [] }\r\n\r\n    process.binding = function (name) {\r\n        throw new Error('process.binding is not supported');\r\n    };\r\n\r\n    process.cwd = function () { return '/' };\r\n    process.chdir = function (dir) {\r\n        throw new Error('process.chdir is not supported');\r\n    };\r\n    process.umask = function() { return 0; };\r\n\r\n    return executive.process = process;  \r\n\r\n});"]}